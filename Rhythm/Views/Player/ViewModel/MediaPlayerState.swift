import SwiftUI
import AVFAudio

final class MediaPlayerState: ObservableObject {
    @Published var isMediaPlayerShown: Bool = false
    @Published var isMediaPlayerExpanded: Bool = false
    @Published var currentTrack: TrackModel?
    
    let audioPlayer = AudioPlayer()
    
    func play(track: TrackModel) {
        currentTrack = track
        isMediaPlayerExpanded = true
        isMediaPlayerShown = true
        
        Task {
            do {
                try AVAudioSession.sharedInstance().setCategory(.playback, mode: .default)
                try AVAudioSession.sharedInstance().setActive(true)
                
                guard let transcoding = track.media?.transcodings.first(where: { $0.format.protocol == "progressive" }) else {
                    print("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y stream progressive.")
                    return
                }
                
                // G·ªçi API ƒë·ªÉ l·∫•y URL ph√°t th·ª±c t·∫ø
                let streamURL = try await audioPlayer.fetchStreamURL(from: transcoding.url)
                
                // Load v√† ph√°t nh·∫°c
                await MainActor.run {
                    audioPlayer.loadAudio(from: streamURL.absoluteString)
                    audioPlayer.play()
                }
            } catch {
                print("üö´ L·ªói ph√°t nh·∫°c: \(error.localizedDescription)")
            }
        }
    }
}
